<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
	<PVWAInformation>
		<!--
			Address:  IP, Shortname, or Fully Qualified Domain Name (FQDN)

			 Schema:  HTTP or HTTPS.  Really should be HTTPS

		  Base Path:  Normally this is PasswordVault

			   Port:  Default for HTTPS is 443.

		  IgnoreSSL:  If True, certificate errors are ignored.  Should be False.
		-->
		<Address>CyberArk.Company.com</Address>
		<Schema>HTTPS</Schema>
		<BasePath>PasswordVault</BasePath>
		<Port>443</Port>
		<IgnoreSSL>False</IgnoreSSL>
	</PVWAInformation>
	<PVWAAuthentication>
		<!--
		NumStages:  The number of Authentication sources.
					The previous stage will be used to pull the credential for the current stage.
					This really should be 1 for no secondary or 2 for using a secondary.

		   Method:  The type of authentication to use when connecting to the REST API.
				    Values:  CyberArk, LDAP, Radius, Windows, SAML, PTA, Shared, PKIPN, OIDC
				    There are 1 and 2.  This is for use cases where your normal ID pulls the account
				    from CyberArk to then make the change.

		   Source:  Where to get the credential to be used with the Authentication Method.
				    Values:  Prompt, AAM, CCP, RESTAPI, LocalFile, PKI
				    Typically the 2nd method should be CCP or RESTAPI.
				    This is because the 1st Method and Source will be used to pull the 2nd Credential.
		-->
		<NumStages>1</NumStages>
		<Method1>PKIPN</Method1>
		<Method2>CyberArk</Method2>
		<Source1>PKI</Source1>
		<Source2>RESTAPI</Source2>
	</PVWAAuthentication>
	<AuthSourceAttributes>
		<!--
				FilePath:  The full path to the Local Credential File.

				PKIPath:  The full path to the locally stored certificate.
						  This can be a certificate file or a certificate store.
						  Example:  Cert:\CurrentUser\My
						  Example:  Cert:\CurrentUser\*1234
							  1234 is the thumbprint of the certificate.

			PKIAttributes:  Used by Where-Object to identify the certificate.
					If more than one meets these attributes you will be asked to
					choose from a GUI.
					Example:  Thumbprint -eq '1234' -and FriendlyName -eq 'My Cert'

		CustomPromptEnabled:  If True then the custom prompt will be used.  False it will be ignored.

		CustomPromptTitle:  You can specify a custom title that may trigger automatic population by some password managers.
		-->
		<FilePath>C:\Users\TheOne\Documents\Credentials\CyberArk_encryptedCred.cred</FilePath>
		<PKIPath>Cert:\CurrentUser\My</PKIPath>
		<PKIAttributes>Thumbprint -eq '1234'|FriendlyName -eq 'My Chosen Cert'</PKIAttributes>
		<CustomPromptEnabled>True</CustomPromptEnabled>
		<CustomPromptTitle>Enter the Logon Username and Password.</CustomPromptTitle>
		<CredentialRetrieval>
			<!--
				If using CCP, AAM, or RESTAPI.
			  ApplicationID:  This is the Name of the Application configured in CyberArk for credential
			  				  retrieval.

				   SafeName:  The name of the Safe where the credential is stored.

				 FolderName:  The name of the folder where the credential is stored.  Normally Root.

					  Query:  The properly formated query to identify the credential.

			RetrievalReason:  If required.  The reason the credential is being retrieved.
			-->
			<ApplicationID>MyApplication</ApplicationID>
			<SafeName>MySafe</SafeName>
			<FolderName>Root</FolderName>
			<Query>ObjectName=MyCustomAccountName</Query>
			<RetrievalReason>Performing Bulk Task</RetrievalReason>
			<AAM>
				<!--
					ClientPath:  The full path and filename to the CLI SDK.
				-->
				<ClientPath>C:\Program Files (x86)\CyberArk\ApplicationPasswordSdk\CLIPasswordSDK64.exe</ClientPath>
			</AAM>
			<CCP>
				<!--
					This section is used for CCP or RESTAPI as a source.
					Address:  IP, Shortname, or Fully Qualified Domain Name (FQDN)

			 		 Schema:  HTTP or HTTPS.  Really should be HTTPS

				  Base Path:  Normally this is AIMWebService

					   Port:  Default for HTTPS is 443.

				  IgnoreSSL:  If True, certificate errors are ignored.  Should be False.

				   CertPath:  The full path to the locally stored certificate.
						This can be a certificate file or a certificate store.
						Example:  Cert:\CurrentUser\My
						Example:  Cert:\CurrentUser\*1234
								  1234 is the thumbprint of the certificate.

				CertAttributes:  Used by Where-Object to identify the certificate.
							Example:  Thumbprint -eq '1234' -and FriendlyName -eq 'My Cert'
				-->
				<Address>CyberArk.Company.com</Address>
				<Schema>HTTPS</Schema>
				<BasePath>AIMWebService</BasePath>
				<Port>443</Port>
				<IgnoreSSL>False</IgnoreSSL>
				<CertPath>Cert:\CurrentUser\My</CertPath>
				<CertAttributes>Thumbprint -eq '1234' -and FriendlyName -eq 'My Cert'</CertAttributes>
			</CCP>
		</CredentialRetrieval>
	</AuthSourceAttributes>
	<Logging>
		<!--
		Destination:  This is where the logging information will be sent.
				Both, Console, File

			Level:  This is the level of logging.
				Levels:  None, Critical, Error, Warning, Information, Debug, Verbose

			Folder:  This can be a relative path or a fully qualified path.

			File:  This is the name of the log file and extension.
				You can add a date and time to the filename by using square brackets []
				This is the datetime string formating.
				Example:  [yyyy-MM-dd HH.mm.ss.f]
				https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings?view=netframework-4.8
		-->
		<Destination>Both</Destination>
		<Level>Verbose</Level>
		<Folder>Logs</Folder>
		<File>[yyyy-MM-dd]_Dev_Scripted_Actions.log</File>
	</Logging>
</Configuration>
